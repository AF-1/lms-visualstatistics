const dataurl="/plugins/VisualStatistics/getdata.html",loader=document.createElement("span");loader.id="loader",loader.innerHTML=`	<div class="bar bar1"></div>
	<div class="bar bar2"></div>
	<div class="bar bar3"></div>
	<div class="bar bar4"></div>
	<div class="bar bar5"></div>
	<div class="bar bar6"></div>
	<div class="bar bar7"></div>
	<div class="bar bar8"></div>
`;const failed=document.createElement("span");failed.id="failed",failed.innerHTML=`<div class="failedicon"></div>`;var currentChartType='';async function clearLMSfilterPrefValues(){await setLMSpref("decadefilterval",''),await setLMSpref("genrefilterid",'')}function updateGenreFilterList(){async function e(){let e=await fetch(dataurl,{method:"post",headers:{"Content-Type":"application/json",Origin:window.location.hostname},body:"genrelist"});if(!e.ok)throw new Error(`HTTP error! status: ${e.status}`);return await e.json()}e().then(t=>{const n=document.querySelector("#genreselect");n.options.length=0;for(var e=0;e<t.results.length;e++){let s=t.results[e].id;(s===null||s===void 0)&&(s='');const o=new Option(t.results[e].name,s);n.add(o,void 0)}}).then(function(){document.getElementById("genreselect").value=''})}function updateDecadeFilterList(){async function e(){let e=await fetch(dataurl,{method:"post",headers:{"Content-Type":"application/json",Origin:window.location.hostname},body:"decadelist"});if(!e.ok)throw new Error(`HTTP error! status: ${e.status}`);return await e.json()}e().then(t=>{const n=document.querySelector("#decadeselect");n.options.length=0;for(var e=0;e<t.results.length;e++){let s=t.results[e].val;(s===null||s===void 0)&&(s='');const o=new Option(t.results[e].name,s);n.add(o,void 0)}}).then(function(){document.getElementById("decadeselect").value=''})}function enterFullscreen(e){e.requestFullscreen?e.requestFullscreen():e.webkitRequestFullscreen&&e.webkitRequestFullscreen()}function exitFullscreen(){document.exitFullscreen?document.exitFullscreen():document.webkitExitFullscreen&&document.webkitExitFullscreen()}function closeNav(){document.getElementById("myNavChart").style.width="0%",document.getElementById("myNavText").style.width="0%",document.getElementById("button_container").style.display="none",document.getElementById("container_togglebtn_layout").style.display="flex",document.getElementById("container_togglebtn_order").style.display="flex",document.getElementById("container_togglebtn_datalabels").style.display="flex",document.getElementById("chartjs-tooltip").style.display="none",document.getElementById("filter_container").style.display="none",document.getElementById("genrefilter").style.display="inline-block",document.getElementById("decadefilter").style.display="inline-block",clearLMSfilterPrefValues(),currentChartType='',document.getElementById("genreselect").value='',document.getElementById("decadeselect").value='',document.getElementById("updatechartbutton").classList.remove("updatebuttonerror"),usefullscreen==1&&exitFullscreen()}function openNav(){var t=document.getElementById("myNavChart"),s,e;usefullscreen==1&&enterFullscreen(t);let n=window.innerWidth;s=document.getElementById("chartCanvas").getContext("2d"),e=Chart.getChart(s),n<800?(legendTitleFontSize=16,e.options.plugins.title.font.size=16):(legendTitleFontSize=20,e.options.plugins.title.font.size=20),e.update(),t.style.width="100%"}function displayLibStatsText(){legendtext.length=0,subtitlelegendtext.length=0;async function e(){document.getElementById("libstatstextfailed").style.display="none",document.getElementById("infoi").style.display="block",document.contains(document.getElementById("failed"))&&document.getElementById("failed").remove(),document.getElementById("infocircle").classList.add("loader-path"),document.getElementById("circularloader").classList.add("circular-loader-rotate");let e=await fetch(dataurl,{method:"post",headers:{"Content-Type":"application/json",Origin:window.location.hostname},body:"getDataLibStatsText"});if(!e.ok)throw new Error(`HTTP error! status: ${e.status}`);return await e.json()}e().then(t=>{for(var i=document.getElementById("libstatstext"),s,o,a=document.getElementById("headervlname"),n='<tbody class="libstatsTableBody">',e=0;e<t.results.length;e++)s=t.results[e].name,o=t.results[e].value,s=="vlheadername"?a.innerHTML=o:n+='<tr><td class="vstats-tdcolor">'+s+'</td><td class="vstats-tdcolor">'+o+"</td></tr>";n+="</tbody>",i.innerHTML=n,toggleColorSchemeTextOverlay()}).then(function(){document.getElementById("myNavText").style.width="100%",document.getElementById("infocircle").classList.remove("loader-path"),document.getElementById("circularloader").classList.remove("circular-loader-rotate")}).catch(function(e){console.log(e),document.getElementById("infocircle").classList.remove("loader-path"),document.getElementById("circularloader").classList.remove("circular-loader-rotate"),document.getElementById("libstatstextfailed").style.display="block",document.getElementById("infoi").style.display="none"})}function displayChart(e,t,n){currentChartType=e,n!=0&&(document.getElementById("filter_container").style.display="block"),n==1&&(document.getElementById("genrefilter").style.display="none"),n==2&&(document.getElementById("decadefilter").style.display="none");async function s(){document.getElementById("libstatstextfailed").style.display="none",document.getElementById("infoi").style.display="block",document.contains(document.getElementById("failed"))&&document.getElementById("failed").remove();var t=document.getElementById(querytype.join());t.parentNode.insertBefore(loader,t.nextSibling);let e=await fetch(dataurl,{method:"post",headers:{"Content-Type":"application/json",Origin:window.location.hostname},body:querytype.toString()});if(!e.ok)throw new Error(`HTTP error! status: ${e.status}`);return await e.json()}s().then(o=>{if(e=="BarStacked"){for(var i=[],a,r,c,s,n=0;n<o.results[0].length;n++)a=JSON.parse(o.results[0][n]),i.push(a);r=o.results[1],drawStackedBarChart(i,r,t)}else if(e=="Scatter"){i=[];for(n=0;n<o.results[0].length;n++)a=JSON.parse(o.results[0][n]),i.push(a);c=o.results[1],r=o.results[2],drawScatterChart(i,c,r)}else if(e=="ScatterExtra"){for(n=0;n<o.results.length;n++)s=o.results[n],xAxisData.push(s.xAxis),yAxisData.push(s.yAxis),s.labelExtra&&s.labelExtra.length>0&&labelExtraData.push(unescape(s.labelExtra));drawScatterChart(void 0,void 0,void 0,"extraLabel")}else{for(n=0;n<o.results.length;n++)s=o.results[n],xAxisData.push(unescape(s.xAxis)),yAxisData.push(s.yAxis),s.labelExtra&&s.labelExtra.length>0&&labelExtraData.push(unescape(s.labelExtra)),s.itemID!=void 0&&s.itemID!=null&&itemsIDdata.push(s.itemID);e=="Line"?drawLineChart(t):e=="Doughnut"?(document.getElementById("button_container").style.display="flex",document.getElementById("container_togglebtn_layout").style.display="none",document.getElementById("container_togglebtn_order").style.display="none",document.getElementById("container_togglebtn_datalabels").style.display="inline-block",t!="longtooltips"&&(document.getElementById("chartjs-tooltip").style.display="inline-block"),drawDoughnutChart(t)):(document.getElementById("button_container").style.display="flex",drawBarChart(t))}}).then(function(){openNav(e);var t=document.getElementById("loader");t.parentNode.removeChild(t)}).catch(function(n){console.log(n);var e=document.getElementById("loader"),t;e.parentNode.removeChild(e),t=document.getElementById(querytype.join()),t.parentNode.insertBefore(failed,t.nextSibling)})}function filterChartUpdate(){var t=document.getElementById("chartCanvas").getContext("2d"),e=Chart.getChart(t);xAxisData.length=0,yAxisData.length=0,itemsIDdata.length=0,labelExtraData.length=0,document.getElementById("updatechartbutton").classList.remove("updatebuttonerror"),document.getElementById("updatechartbutton").classList.add("updatebuttonanimate");async function n(){let t=await fetch(dataurl,{method:"post",headers:{"Content-Type":"application/json",Origin:window.location.hostname},body:querytype.toString()});if(await function(){e.data.labels.pop(),e.data.datasets.forEach(e=>{e.data.pop()})},!t.ok)throw new Error(`HTTP error! status: ${t.status}`);return await t.json()}n().then(s=>{if(currentChartType=="BarStacked"){e.data.datasets.length=0;for(var o=[],r,i,a,c,l,n,t=0;t<s.results[0].length;t++)r=JSON.parse(s.results[0][t]),o.push(r);i=s.results[1];for(t=0;t<i.length;t++)a=i[t],c={label:a,data:o,parsing:{yAxisKey:a}},e.config.data.datasets.push(c),e.config.data.datasets[t].backgroundColor=palette[t%palette.length]}else if(currentChartType=="Scatter"){e.data.datasets.length=0,o=[];for(t=0;t<s.results[0].length;t++)r=JSON.parse(s.results[0][t]),o.push(r);l=s.results[1],i=s.results[2];for(t=0;t<i.length;t++)a=i[t],c={label:a,data:o[t]},e.config.data.datasets.push(c),e.config.data.datasets[t].backgroundColor=palette[t%palette.length]}else if(currentChartType=="ScatterExtra"){for(t=0;t<s.results.length;t++)n=s.results[t],xAxisData.push(n.xAxis),yAxisData.push(n.yAxis),n.labelExtra&&n.labelExtra.length>0&&labelExtraData.push(unescape(n.labelExtra))}else for(t=0;t<s.results.length;t++)n=s.results[t],xAxisData.push(unescape(n.xAxis)),yAxisData.push(n.yAxis),n.labelExtra&&n.labelExtra.length>0&&labelExtraData.push(unescape(n.labelExtra)),n.itemID&&itemsIDdata.push(n.itemID)}).then(function(){var e=document.getElementById("chartCanvas").getContext("2d"),t=Chart.getChart(e);document.getElementById("updatechartbutton").classList.remove("updatebuttonanimate"),t.update()}).catch(function(e){document.getElementById("updatechartbutton").classList.remove("updatebuttonanimate"),document.getElementById("updatechartbutton").classList.add("updatebuttonerror"),console.log(e)})}function showChart(e){querytype.length!=0&&(legendtext.length=0,subtitlelegendtext.length=0,yLabel.length=0,xLabel.length=0,unit.length=0,valdecimals.length=0,querytype.length=0,xAxisData.length=0,yAxisData.length=0,itemsIDdata.length=0,labelExtraData.length=0,IDtargetCat.length=0),e=="getDataTracksByAudioFileFormat"&&(legendtext.push(languageStrings[e]),subtitlelegendtext.push(languageStrings.subtitleSegments),yLabel.push(" "+languageStrings.VLchartlabelRatedTrackCount),querytype.push("getDataTracksByAudioFileFormat"),displayChart("Doughnut")),e=="getDataTracksByBitrate"&&(legendtext.push(languageStrings[e]),subtitlelegendtext.push(languageStrings.subtitleDataPoints),yLabel.push(languageStrings.VLchartlabelTrackCount),xLabel.push(languageStrings.VLchartlabelBitrate),unit.push(languageStrings.VLchartlabelUnitKbps),querytype.push("getDataTracksByBitrate"),displayChart("Line")),e=="getDataTracksByBitrateAudioFileFormat"&&(legendtext.push(languageStrings[e]),subtitlelegendtext.push(languageStrings.subtitleSegments),yLabel.push(languageStrings.VLchartlabelTrackCount),xLabel.push(languageStrings.VLchartlabelBitrate),unit.push(languageStrings.VLchartlabelUnitKbps),querytype.push("getDataTracksByBitrateAudioFileFormat"),displayChart("BarStacked","BitRate")),e=="getDataTracksBySampleRate"&&(legendtext.push(languageStrings[e]),subtitlelegendtext.push(languageStrings.subtitleSegments),yLabel.push(" "+languageStrings.VLchartlabelTrackCount),querytype.push("getDataTracksBySampleRate"),displayChart("Doughnut")),e=="getDataTracksByBitrateAudioFileFormatScatter"&&(legendtext.push(languageStrings[e]),subtitlelegendtext.push(languageStrings.subtitleDataPoints),yLabel.push(languageStrings.VLchartlabelTrackCount),querytype.push("getDataTracksByBitrateAudioFileFormatScatter"),displayChart("Scatter")),e=="getDataTracksByFileSize"&&(legendtext.push(languageStrings[e]),subtitlelegendtext.push(languageStrings.subtitleBars),yLabel.push(languageStrings.VLchartlabelTrackCount),xLabel.push(languageStrings.VLchartlabelFileSize),unit.push(languageStrings.VLchartlabelUnitMB),querytype.push("getDataTracksByFileSize"),displayChart("Line")),e=="getDataTracksByFileSizeAudioFileFormat"&&(legendtext.push(languageStrings[e]),subtitlelegendtext.push(languageStrings.subtitleSegments),yLabel.push(languageStrings.VLchartlabelTrackCount),xLabel.push(languageStrings.VLchartlabelFileSize),unit.push(languageStrings.VLchartlabelUnitMB),querytype.push("getDataTracksByFileSizeAudioFileFormat"),displayChart("BarStacked")),e=="getDataTracksByGenre"&&(legendtext.push(languageStrings[e]),subtitlelegendtext.push(languageStrings.subtitleSegments),xLabel.push(languageStrings.VLchartlabelGenreName),yLabel.push(" "+languageStrings.VLchartlabelTrackCount),querytype.push("getDataTracksByGenre"),IDtargetCat.push("genre"),displayChart("Doughnut","longtooltips",1)),e=="getDataTracksMostPlayed"&&(legendtext.push(languageStrings[e]),subtitlelegendtext.push(languageStrings.subtitleBars),yLabel.push(languageStrings.VLchartlabelPlayCount),xLabel.push(languageStrings.VLchartlabelTrackTitle),querytype.push("getDataTracksMostPlayed"),IDtargetCat.push("track"),displayChart("Bar")),e=="getDataTracksMostPlayedAPC"&&(legendtext.push(languageStrings[e]),subtitlelegendtext.push(languageStrings.subtitleBars),yLabel.push(languageStrings.VLchartlabelPlayCount),xLabel.push(languageStrings.VLchartlabelTrackTitle),querytype.push("getDataTracksMostPlayedAPC"),IDtargetCat.push("track"),displayChart("Bar")),e=="getDataTracksMostSkippedAPC"&&(legendtext.push(languageStrings[e]),subtitlelegendtext.push(languageStrings.subtitleBars),yLabel.push(languageStrings.VLchartlabelSkipCount),xLabel.push(languageStrings.VLchartlabelTrackTitle),querytype.push("getDataTracksMostSkippedAPC"),IDtargetCat.push("track"),displayChart("Bar")),e=="getDataTracksByRating"&&(legendtext.push(languageStrings[e]),subtitlelegendtext.push(languageStrings.subtitleSegments),yLabel.push(" "+languageStrings.VLchartlabelRatedTrackCount),querytype.push("getDataTracksByRating"),displayChart("Doughnut")),e=="getDataTracksByYear"&&(legendtext.push(languageStrings[e]),subtitlelegendtext.push(languageStrings.subtitleBars),yLabel.push(languageStrings.VLchartlabelTrackCount),xLabel.push(languageStrings.VLchartlabelYear),querytype.push("getDataTracksByYear"),IDtargetCat.push("year"),displayChart("Bar","vertical",2)),e=="getDataTracksByDateAdded"&&(legendtext.push(languageStrings[e]),subtitlelegendtext.push(languageStrings.subtitleBars),yLabel.push(languageStrings.VLchartlabelTrackCount),xLabel.push(languageStrings.VLchartlabelDateLastAdded),querytype.push("getDataTracksByDateAdded"),displayChart("Line",void 0,0)),e=="getDataTracksByDateLastModified"&&(legendtext.push(languageStrings[e]),subtitlelegendtext.push(languageStrings.subtitleBars),yLabel.push(languageStrings.VLchartlabelTrackCount),xLabel.push(languageStrings.VLchartlabelDateLastModified),querytype.push("getDataTracksByDateLastModified"),displayChart("Line",void 0,0)),e=="getDataArtistWithMostTracks"&&(legendtext.push(languageStrings[e]),subtitlelegendtext.push(languageStrings.subtitleBars),yLabel.push(languageStrings.VLchartlabelTrackCount),xLabel.push(languageStrings.VLchartlabelArtistName),querytype.push("getDataArtistWithMostTracks"),IDtargetCat.push("artist"),displayChart("Bar")),e=="getDataArtistWithMostAlbums"&&(legendtext.push(languageStrings[e]),subtitlelegendtext.push(languageStrings.subtitleBars),yLabel.push(languageStrings.VLchartlabelAlbumCount),xLabel.push(languageStrings.VLchartlabelArtistName),querytype.push("getDataArtistWithMostAlbums"),IDtargetCat.push("artist"),displayChart("Bar")),e=="getDataArtistWithMostRatedTracks"&&(legendtext.push(languageStrings[e]),subtitlelegendtext.push(languageStrings.subtitleBars),yLabel.push(languageStrings.VLchartlabelRatedTrackCount),xLabel.push(languageStrings.VLchartlabelArtistName),querytype.push("getDataArtistWithMostRatedTracks"),IDtargetCat.push("artist"),displayChart("Bar")),e=="getDataArtistsHighestPercentageRatedTracks"&&(legendtext.push(languageStrings[e]),subtitlelegendtext.push(languageStrings.subtitleBars),yLabel.push(languageStrings.VLchartlabelPercentageRated),xLabel.push(languageStrings.VLchartlabelArtistName),unit.push(languageStrings.VLchartlabelUnitPercentage),querytype.push("getDataArtistsHighestPercentageRatedTracks"),IDtargetCat.push("artist"),displayChart("Bar")),e=="getDataArtistsWithTopRatedTracksRated"&&(legendtext.push(languageStrings[e]),subtitlelegendtext.push(languageStrings.subtitleBars),yLabel.push(languageStrings.VLchartlabelAverageTrackRating),xLabel.push(languageStrings.VLchartlabelArtistName),unit.push(languageStrings.VLchartlabelUnitStar,languageStrings.VLchartlabelUnitStars),querytype.push("getDataArtistsWithTopRatedTracksRated"),IDtargetCat.push("artist"),displayChart("Bar")),e=="getDataArtistsWithMostPlayedTracks"&&(legendtext.push(languageStrings[e]),subtitlelegendtext.push(languageStrings.subtitleBars),yLabel.push(languageStrings.VLchartlabelPlayedTrackCount),xLabel.push(languageStrings.VLchartlabelArtistName),querytype.push("getDataArtistsWithMostPlayedTracks"),IDtargetCat.push("artist"),displayChart("Bar")),e=="getDataArtistsWithMostPlayedTracksAPC"&&(legendtext.push(languageStrings[e]),subtitlelegendtext.push(languageStrings.subtitleBars),yLabel.push(languageStrings.VLchartlabelPlayedTrackCount),xLabel.push(languageStrings.VLchartlabelArtistName),querytype.push("getDataArtistsWithMostPlayedTracksAPC"),IDtargetCat.push("artist"),displayChart("Bar")),e=="getDataArtistsWithMostPlayedTracksAverage"&&(legendtext.push(languageStrings[e]),subtitlelegendtext.push(languageStrings.subtitleBars),yLabel.push(languageStrings.VLchartlabelAveragePlayCount),xLabel.push(languageStrings.VLchartlabelArtistName),valdecimals.push(2),querytype.push("getDataArtistsWithMostPlayedTracksAverage"),IDtargetCat.push("artist"),displayChart("Bar")),e=="getDataArtistsWithMostPlayedTracksAverageAPC"&&(legendtext.push(languageStrings[e]),subtitlelegendtext.push(languageStrings.subtitleBars),yLabel.push(languageStrings.VLchartlabelAveragePlayCount),xLabel.push(languageStrings.VLchartlabelArtistName),valdecimals.push(2),querytype.push("getDataArtistsWithMostPlayedTracksAverageAPC"),IDtargetCat.push("artist"),displayChart("Bar")),e=="getDataArtistsWithTracksCompletelyPartlyNonePlayed"&&(legendtext.push(languageStrings[e]),subtitlelegendtext.push(languageStrings.subtitleSegments),yLabel.push(" "+languageStrings.VLchartlabelArtistCount),querytype.push("getDataArtistsWithTracksCompletelyPartlyNonePlayed"),displayChart("Doughnut","longtooltips")),e=="getDataArtistsWithTracksCompletelyPartlyNonePlayedAPC"&&(legendtext.push(languageStrings[e]),subtitlelegendtext.push(languageStrings.subtitleSegments),yLabel.push(" "+languageStrings.VLchartlabelArtistCount),querytype.push("getDataArtistsWithTracksCompletelyPartlyNonePlayedAPC"),displayChart("Doughnut","longtooltips")),e=="getDataArtistsHighestPercentagePlayedTracks"&&(legendtext.push(languageStrings[e]),subtitlelegendtext.push(languageStrings.subtitleBars),yLabel.push(languageStrings.VLchartlabelPercentagePlayed),xLabel.push(languageStrings.VLchartlabelArtistName),unit.push(languageStrings.VLchartlabelUnitPercentage),querytype.push("getDataArtistsHighestPercentagePlayedTracks"),IDtargetCat.push("artist"),displayChart("Bar")),e=="getDataArtistsHighestPercentagePlayedTracksAPC"&&(legendtext.push(languageStrings[e]),subtitlelegendtext.push(languageStrings.subtitleBars),yLabel.push(languageStrings.VLchartlabelPercentagePlayed),xLabel.push(languageStrings.VLchartlabelArtistName),unit.push(languageStrings.VLchartlabelUnitPercentage),querytype.push("getDataArtistsHighestPercentagePlayedTracksAPC"),IDtargetCat.push("artist"),displayChart("Bar")),e=="getDataArtistsWithMostSkippedTracksAPC"&&(legendtext.push(languageStrings[e]),subtitlelegendtext.push(languageStrings.subtitleBars),yLabel.push(languageStrings.VLchartlabelSkippedTrackCount),xLabel.push(languageStrings.VLchartlabelArtistName),querytype.push("getDataArtistsWithMostSkippedTracksAPC"),IDtargetCat.push("artist"),displayChart("Bar")),e=="getDataArtistsHighestPercentageSkippedTracksAPC"&&(legendtext.push(languageStrings[e]),subtitlelegendtext.push(languageStrings.subtitleBars),yLabel.push(languageStrings.VLchartlabelPercentageSkipped),xLabel.push(languageStrings.VLchartlabelArtistName),unit.push(languageStrings.VLchartlabelUnitPercentage),querytype.push("getDataArtistsHighestPercentageSkippedTracksAPC"),IDtargetCat.push("artist"),displayChart("Bar")),e=="getDataArtistsWithMostSkippedTracksAverageAPC"&&(legendtext.push(languageStrings[e]),subtitlelegendtext.push(languageStrings.subtitleBars),yLabel.push(languageStrings.VLchartlabelAverageSkipCount),xLabel.push(languageStrings.VLchartlabelArtistName),valdecimals.push(3),querytype.push("getDataArtistsWithMostSkippedTracksAverageAPC"),IDtargetCat.push("artist"),displayChart("Bar")),e=="getDataArtistsRatingPlaycount"&&(legendtext.push(languageStrings[e]),subtitlelegendtext.push(languageStrings.subtitleDataPoints),yLabel.push(languageStrings.VLchartlabelAverageRatingPlayCountForArtist),xLabel.push(languageStrings.VLchartlabelArtistName),querytype.push("getDataArtistsRatingPlaycount"),displayChart("ScatterExtra")),e=="getDataArtistsRatingPlaycountAPC"&&(legendtext.push(languageStrings[e]),subtitlelegendtext.push(languageStrings.subtitleDataPoints),yLabel.push(languageStrings.VLchartlabelAverageRatingPlayCountForArtist),querytype.push("getDataArtistsRatingPlaycountAPC"),displayChart("ScatterExtra")),e=="getDataAlbumsByYear"&&(legendtext.push(languageStrings[e]),subtitlelegendtext.push(languageStrings.subtitleBars),yLabel.push(languageStrings.VLchartlabelAlbumCount),xLabel.push(languageStrings.VLchartlabelYear),querytype.push("getDataAlbumsByYear"),IDtargetCat.push("year"),displayChart("Bar","vertical")),e=="getDataAlbumsWithMostTracks"&&(legendtext.push(languageStrings[e]),subtitlelegendtext.push(languageStrings.subtitleBars),yLabel.push(languageStrings.VLchartlabelTrackCount),xLabel.push(languageStrings.VLchartlabelAlbumName),querytype.push("getDataAlbumsWithMostTracks"),IDtargetCat.push("album"),displayChart("Bar")),e=="getDataAlbumsWithMostRatedTracks"&&(legendtext.push(languageStrings[e]),subtitlelegendtext.push(languageStrings.subtitleBars),yLabel.push(languageStrings.VLchartlabelRatedTrackCount),xLabel.push(languageStrings.VLchartlabelAlbumName),querytype.push("getDataAlbumsWithMostRatedTracks"),IDtargetCat.push("album"),displayChart("Bar")),e=="getDataAlbumsHighestPercentageRatedTracks"&&(legendtext.push(languageStrings[e]),subtitlelegendtext.push(languageStrings.subtitleBars),yLabel.push(languageStrings.VLchartlabelPercentageRated),xLabel.push(languageStrings.VLchartlabelAlbumName),unit.push(languageStrings.VLchartlabelUnitPercentage),querytype.push("getDataAlbumsHighestPercentageRatedTracks"),IDtargetCat.push("album"),displayChart("Bar")),e=="getDataAlbumsWithTopRatedTracksRated"&&(legendtext.push(languageStrings[e]),subtitlelegendtext.push(languageStrings.subtitleBars),yLabel.push(languageStrings.VLchartlabelAverageTrackRating),xLabel.push(languageStrings.VLchartlabelAlbumName),unit.push(languageStrings.VLchartlabelUnitStar,languageStrings.VLchartlabelUnitStars),querytype.push("getDataAlbumsWithTopRatedTracksRated"),IDtargetCat.push("album"),displayChart("Bar")),e=="getDataAlbumsWithMostPlayedTracks"&&(legendtext.push(languageStrings[e]),subtitlelegendtext.push(languageStrings.subtitleBars),yLabel.push(languageStrings.VLchartlabelPlayedTrackCount),xLabel.push(languageStrings.VLchartlabelAlbumName),querytype.push("getDataAlbumsWithMostPlayedTracks"),IDtargetCat.push("album"),displayChart("Bar")),e=="getDataAlbumsWithMostPlayedTracksAPC"&&(legendtext.push(languageStrings[e]),subtitlelegendtext.push(languageStrings.subtitleBars),yLabel.push(languageStrings.VLchartlabelPlayedTrackCount),xLabel.push(languageStrings.VLchartlabelAlbumName),querytype.push("getDataAlbumsWithMostPlayedTracksAPC"),IDtargetCat.push("album"),displayChart("Bar")),e=="getDataAlbumsWithTracksCompletelyPartlyNonePlayed"&&(legendtext.push(languageStrings[e]),subtitlelegendtext.push(languageStrings.subtitleSegments),yLabel.push(" "+languageStrings.VLchartlabelAlbumCount),querytype.push("getDataAlbumsWithTracksCompletelyPartlyNonePlayed"),displayChart("Doughnut","longtooltips")),e=="getDataAlbumsWithTracksCompletelyPartlyNonePlayedAPC"&&(legendtext.push(languageStrings[e]),subtitlelegendtext.push(languageStrings.subtitleSegments),yLabel.push(" "+languageStrings.VLchartlabelAlbumCount),querytype.push("getDataAlbumsWithTracksCompletelyPartlyNonePlayedAPC"),displayChart("Doughnut","longtooltips")),e=="getDataAlbumsHighestPercentagePlayedTracks"&&(legendtext.push(languageStrings[e]),subtitlelegendtext.push(languageStrings.subtitleBars),yLabel.push(languageStrings.VLchartlabelPercentagePlayed),xLabel.push(languageStrings.VLchartlabelAlbumName),unit.push(languageStrings.VLchartlabelUnitPercentage),querytype.push("getDataAlbumsHighestPercentagePlayedTracks"),IDtargetCat.push("album"),displayChart("Bar")),e=="getDataAlbumsHighestPercentagePlayedTracksAPC"&&(legendtext.push(languageStrings[e]),subtitlelegendtext.push(languageStrings.subtitleBars),yLabel.push(languageStrings.VLchartlabelPercentagePlayed),xLabel.push(languageStrings.VLchartlabelAlbumName),unit.push(languageStrings.VLchartlabelUnitPercentage),querytype.push("getDataAlbumsHighestPercentagePlayedTracksAPC"),IDtargetCat.push("album"),displayChart("Bar")),e=="getDataAlbumsWithMostPlayedTracksAverage"&&(legendtext.push(languageStrings[e]),subtitlelegendtext.push(languageStrings.subtitleBars),yLabel.push(languageStrings.VLchartlabelAveragePlayCount),xLabel.push(languageStrings.VLchartlabelAlbumName),valdecimals.push(2),querytype.push("getDataAlbumsWithMostPlayedTracksAverage"),IDtargetCat.push("album"),displayChart("Bar")),e=="getDataAlbumsWithMostPlayedTracksAverageAPC"&&(legendtext.push(languageStrings[e]),subtitlelegendtext.push(languageStrings.subtitleBars),yLabel.push(languageStrings.VLchartlabelAveragePlayCount),xLabel.push(languageStrings.VLchartlabelAlbumName),valdecimals.push(2),querytype.push("getDataAlbumsWithMostPlayedTracksAverageAPC"),IDtargetCat.push("album"),displayChart("Bar")),e=="getDataAlbumsWithMostSkippedTracksAPC"&&(legendtext.push(languageStrings[e]),subtitlelegendtext.push(languageStrings.subtitleBars),yLabel.push(languageStrings.VLchartlabelSkippedTrackCount),xLabel.push(languageStrings.VLchartlabelAlbumName),querytype.push("getDataAlbumsWithMostSkippedTracksAPC"),IDtargetCat.push("album"),displayChart("Bar")),e=="getDataAlbumsHighestPercentageSkippedTracksAPC"&&(legendtext.push(languageStrings[e]),subtitlelegendtext.push(languageStrings.subtitleBars),yLabel.push(languageStrings.VLchartlabelPercentageSkipped),xLabel.push(languageStrings.VLchartlabelAlbumName),unit.push(languageStrings.VLchartlabelUnitPercentage),querytype.push("getDataAlbumsHighestPercentageSkippedTracksAPC"),IDtargetCat.push("album"),displayChart("Bar")),e=="getDataAlbumsWithMostSkippedTracksAverageAPC"&&(legendtext.push(languageStrings[e]),subtitlelegendtext.push(languageStrings.subtitleBars),yLabel.push(languageStrings.VLchartlabelAverageSkipCount),xLabel.push(languageStrings.VLchartlabelAlbumName),valdecimals.push(3),querytype.push("getDataAlbumsWithMostSkippedTracksAverageAPC"),IDtargetCat.push("album"),displayChart("Bar")),e=="getDataGenresWithMostTracks"&&(legendtext.push(languageStrings[e]),subtitlelegendtext.push(languageStrings.subtitleBars),yLabel.push(languageStrings.VLchartlabelTrackCount),xLabel.push(languageStrings.VLchartlabelGenreName),querytype.push("getDataGenresWithMostTracks"),IDtargetCat.push("genre"),displayChart("Bar",void 0,1)),e=="getDataGenresWithMostAlbums"&&(legendtext.push(languageStrings[e]),subtitlelegendtext.push(languageStrings.subtitleBars),yLabel.push(languageStrings.VLchartlabelAlbumCount),xLabel.push(languageStrings.VLchartlabelGenreName),querytype.push("getDataGenresWithMostAlbums"),IDtargetCat.push("genre"),displayChart("Bar",void 0,1)),e=="getDataGenresWithMostRatedTracks"&&(legendtext.push(languageStrings[e]),subtitlelegendtext.push(languageStrings.subtitleBars),yLabel.push(languageStrings.VLchartlabelRatedTrackCount),xLabel.push(languageStrings.VLchartlabelGenreName),querytype.push("getDataGenresWithMostRatedTracks"),IDtargetCat.push("genre"),displayChart("Bar",void 0,1)),e=="getDataGenresHighestPercentageRatedTracks"&&(legendtext.push(languageStrings[e]),subtitlelegendtext.push(languageStrings.subtitleBars),yLabel.push(languageStrings.VLchartlabelPercentageRated),xLabel.push(languageStrings.VLchartlabelGenreName),unit.push(languageStrings.VLchartlabelUnitPercentage),querytype.push("getDataGenresHighestPercentageRatedTracks"),IDtargetCat.push("genre"),displayChart("Bar",void 0,1)),e=="getDataGenresWithTopRatedTracksRated"&&(legendtext.push(languageStrings[e]),subtitlelegendtext.push(languageStrings.subtitleBars),yLabel.push(languageStrings.VLchartlabelAverageTrackRating),xLabel.push(languageStrings.VLchartlabelGenreName),unit.push(languageStrings.VLchartlabelUnitStar,languageStrings.VLchartlabelUnitStars),querytype.push("getDataGenresWithTopRatedTracksRated"),IDtargetCat.push("genre"),displayChart("Bar",void 0,1)),e=="getDataGenresWithMostPlayedTracks"&&(legendtext.push(languageStrings[e]),subtitlelegendtext.push(languageStrings.subtitleBars),yLabel.push(languageStrings.VLchartlabelPlayedTrackCount),xLabel.push(languageStrings.VLchartlabelGenreName),querytype.push("getDataGenresWithMostPlayedTracks"),IDtargetCat.push("genre"),displayChart("Bar",void 0,1)),e=="getDataGenresWithMostPlayedTracksAPC"&&(legendtext.push(languageStrings[e]),subtitlelegendtext.push(languageStrings.subtitleBars),yLabel.push(languageStrings.VLchartlabelPlayedTrackCount),xLabel.push(languageStrings.VLchartlabelGenreName),querytype.push("getDataGenresWithMostPlayedTracksAPC"),IDtargetCat.push("genre"),displayChart("Bar",void 0,1)),e=="getDataGenresHighestPercentagePlayedTracks"&&(legendtext.push(languageStrings[e]),subtitlelegendtext.push(languageStrings.subtitleBars),yLabel.push(languageStrings.VLchartlabelPercentagePlayed),xLabel.push(languageStrings.VLchartlabelGenreName),unit.push(languageStrings.VLchartlabelUnitPercentage),querytype.push("getDataGenresHighestPercentagePlayedTracks"),IDtargetCat.push("genre"),displayChart("Bar",void 0,1)),e=="getDataGenresHighestPercentagePlayedTracksAPC"&&(legendtext.push(languageStrings[e]),subtitlelegendtext.push(languageStrings.subtitleBars),yLabel.push(languageStrings.VLchartlabelPercentagePlayed),xLabel.push(languageStrings.VLchartlabelGenreName),unit.push(languageStrings.VLchartlabelUnitPercentage),querytype.push("getDataGenresHighestPercentagePlayedTracksAPC"),IDtargetCat.push("genre"),displayChart("Bar",void 0,1)),e=="getDataGenresWithMostPlayedTracksAverage"&&(legendtext.push(languageStrings[e]),subtitlelegendtext.push(languageStrings.subtitleBars),yLabel.push(languageStrings.VLchartlabelAveragePlayCount),xLabel.push(languageStrings.VLchartlabelGenreName),valdecimals.push(2),querytype.push("getDataGenresWithMostPlayedTracksAverage"),IDtargetCat.push("genre"),displayChart("Bar",void 0,1)),e=="getDataGenresWithMostPlayedTracksAverageAPC"&&(legendtext.push(languageStrings[e]),subtitlelegendtext.push(languageStrings.subtitleBars),yLabel.push(languageStrings.VLchartlabelAveragePlayCount),xLabel.push(languageStrings.VLchartlabelGenreName),valdecimals.push(2),querytype.push("getDataGenresWithMostPlayedTracksAverageAPC"),IDtargetCat.push("genre"),displayChart("Bar",void 0,1)),e=="getDataGenresWithMostSkippedTracksAPC"&&(legendtext.push(languageStrings[e]),subtitlelegendtext.push(languageStrings.subtitleBars),yLabel.push(languageStrings.VLchartlabelSkippedTrackCount),xLabel.push(languageStrings.VLchartlabelGenreName),querytype.push("getDataGenresWithMostSkippedTracksAPC"),IDtargetCat.push("genre"),displayChart("Bar",void 0,1)),e=="getDataGenresHighestPercentageSkippedTracksAPC"&&(legendtext.push(languageStrings[e]),subtitlelegendtext.push(languageStrings.subtitleBars),yLabel.push(languageStrings.VLchartlabelPercentageSkipped),xLabel.push(languageStrings.VLchartlabelGenreName),unit.push(languageStrings.VLchartlabelUnitPercentage),valdecimals.push(2),querytype.push("getDataGenresHighestPercentageSkippedTracksAPC"),IDtargetCat.push("genre"),displayChart("Bar",void 0,1)),e=="getDataGenresWithMostSkippedTracksAverageAPC"&&(legendtext.push(languageStrings[e]),subtitlelegendtext.push(languageStrings.subtitleBars),yLabel.push(languageStrings.VLchartlabelAverageSkipCount),xLabel.push(languageStrings.VLchartlabelGenreName),valdecimals.push(3),querytype.push("getDataGenresWithMostSkippedTracksAverageAPC"),IDtargetCat.push("genre"),displayChart("Bar",void 0,1)),e=="getDataGenresWithTopAverageBitrate"&&(legendtext.push(languageStrings[e]),subtitlelegendtext.push(languageStrings.subtitleBars),yLabel.push(languageStrings.VLchartlabelAverageBitrate),xLabel.push(languageStrings.VLchartlabelGenreName),unit.push(languageStrings.VLchartlabelUnitKbps),valdecimals.push(0),querytype.push("getDataGenresWithTopAverageBitrate"),IDtargetCat.push("genre"),displayChart("Bar",void 0,1)),e=="getDataYearsWithMostTracks"&&(legendtext.push(languageStrings[e]),subtitlelegendtext.push(languageStrings.subtitleBars),yLabel.push(languageStrings.VLchartlabelTrackCount),xLabel.push(languageStrings.VLchartlabelYear),querytype.push("getDataYearsWithMostTracks"),IDtargetCat.push("year"),displayChart("Bar",void 0,2)),e=="getDataYearsWithMostAlbums"&&(legendtext.push(languageStrings[e]),subtitlelegendtext.push(languageStrings.subtitleBars),yLabel.push(languageStrings.VLchartlabelAlbumCount),xLabel.push(languageStrings.VLchartlabelYear),querytype.push("getDataYearsWithMostAlbums"),IDtargetCat.push("year"),displayChart("Bar",void 0,2)),e=="getDataYearsWithMostRatedTracks"&&(legendtext.push(languageStrings[e]),subtitlelegendtext.push(languageStrings.subtitleBars),yLabel.push(languageStrings.VLchartlabelRatedTrackCount),xLabel.push(languageStrings.VLchartlabelYear),querytype.push("getDataYearsWithMostRatedTracks"),IDtargetCat.push("year"),displayChart("Bar",void 0,2)),e=="getDataYearsHighestPercentageRatedTracks"&&(legendtext.push(languageStrings[e]),subtitlelegendtext.push(languageStrings.subtitleBars),yLabel.push(languageStrings.VLchartlabelPercentageRated),xLabel.push(languageStrings.VLchartlabelYear),unit.push(languageStrings.VLchartlabelUnitPercentage),querytype.push("getDataYearsHighestPercentageRatedTracks"),IDtargetCat.push("year"),displayChart("Bar",void 0,2)),e=="getDataYearsWithTopRatedTracksRated"&&(legendtext.push(languageStrings[e]),subtitlelegendtext.push(languageStrings.subtitleBars),yLabel.push(languageStrings.VLchartlabelAverageTrackRating),xLabel.push(languageStrings.VLchartlabelYear),unit.push(languageStrings.VLchartlabelUnitStar,languageStrings.VLchartlabelUnitStars),valdecimals.push(3),querytype.push("getDataYearsWithTopRatedTracksRated"),IDtargetCat.push("year"),displayChart("Bar",void 0,2)),e=="getDataYearsWithMostPlayedTracks"&&(legendtext.push(languageStrings[e]),subtitlelegendtext.push(languageStrings.subtitleBars),yLabel.push(languageStrings.VLchartlabelPlayedTrackCount),xLabel.push(languageStrings.VLchartlabelYear),querytype.push("getDataYearsWithMostPlayedTracks"),IDtargetCat.push("year"),displayChart("Bar",void 0,2)),e=="getDataYearsWithMostPlayedTracksAPC"&&(legendtext.push(languageStrings[e]),subtitlelegendtext.push(languageStrings.subtitleBars),yLabel.push(languageStrings.VLchartlabelPlayedTrackCount),xLabel.push(languageStrings.VLchartlabelYear),querytype.push("getDataYearsWithMostPlayedTracksAPC"),IDtargetCat.push("year"),displayChart("Bar",void 0,2)),e=="getDataYearsHighestPercentagePlayedTracks"&&(legendtext.push(languageStrings[e]),subtitlelegendtext.push(languageStrings.subtitleBars),yLabel.push(languageStrings.VLchartlabelPercentagePlayed),xLabel.push(languageStrings.VLchartlabelYear),unit.push(languageStrings.VLchartlabelUnitPercentage),querytype.push("getDataYearsHighestPercentagePlayedTracks"),IDtargetCat.push("year"),displayChart("Bar",void 0,2)),e=="getDataYearsHighestPercentagePlayedTracksAPC"&&(legendtext.push(languageStrings[e]),subtitlelegendtext.push(languageStrings.subtitleBars),yLabel.push(languageStrings.VLchartlabelPercentagePlayed),xLabel.push(languageStrings.VLchartlabelYear),unit.push(languageStrings.VLchartlabelUnitPercentage),querytype.push("getDataYearsHighestPercentagePlayedTracksAPC"),IDtargetCat.push("year"),displayChart("Bar",void 0,2)),e=="getDataYearsWithMostPlayedTracksAverage"&&(legendtext.push(languageStrings[e]),subtitlelegendtext.push(languageStrings.subtitleBars),yLabel.push(languageStrings.VLchartlabelAveragePlayCount),xLabel.push(languageStrings.VLchartlabelYear),valdecimals.push(3),querytype.push("getDataYearsWithMostPlayedTracksAverage"),IDtargetCat.push("year"),displayChart("Bar",void 0,2)),e=="getDataYearsWithMostPlayedTracksAverageAPC"&&(legendtext.push(languageStrings[e]),subtitlelegendtext.push(languageStrings.subtitleBars),yLabel.push(languageStrings.VLchartlabelAveragePlayCount),xLabel.push(languageStrings.VLchartlabelYear),valdecimals.push(3),querytype.push("getDataYearsWithMostPlayedTracksAverageAPC"),IDtargetCat.push("year"),displayChart("Bar",void 0,2)),e=="getDataYearsWithMostSkippedTracksAPC"&&(legendtext.push(languageStrings[e]),subtitlelegendtext.push(languageStrings.subtitleBars),yLabel.push(languageStrings.VLchartlabelSkippedTrackCount),xLabel.push(languageStrings.VLchartlabelYear),querytype.push("getDataYearsWithMostSkippedTracksAPC"),IDtargetCat.push("year"),displayChart("Bar",void 0,2)),e=="getDataYearsHighestPercentageSkippedTracksAPC"&&(legendtext.push(languageStrings[e]),subtitlelegendtext.push(languageStrings.subtitleBars),yLabel.push(languageStrings.VLchartlabelPercentageSkipped),xLabel.push(languageStrings.VLchartlabelYear),unit.push(languageStrings.VLchartlabelUnitPercentage),valdecimals.push(3),querytype.push("getDataYearsHighestPercentageSkippedTracksAPC"),IDtargetCat.push("year"),displayChart("Bar",void 0,2)),e=="getDataYearsWithMostSkippedTracksAverageAPC"&&(legendtext.push(languageStrings[e]),subtitlelegendtext.push(languageStrings.subtitleBars),yLabel.push(languageStrings.VLchartlabelAverageSkipCount),xLabel.push(languageStrings.VLchartlabelYear),valdecimals.push(3),querytype.push("getDataYearsWithMostSkippedTracksAverageAPC"),IDtargetCat.push("year"),displayChart("Bar",void 0,2)),e=="getDataDecadesWithMostTracks"&&(legendtext.push(languageStrings[e]),subtitlelegendtext.push(languageStrings.subtitleBars),yLabel.push(languageStrings.VLchartlabelTrackCount),xLabel.push(languageStrings.VLchartlabelDecade),querytype.push("getDataDecadesWithMostTracks"),displayChart("Bar",void 0,2)),e=="getDataDecadesWithMostAlbums"&&(legendtext.push(languageStrings[e]),subtitlelegendtext.push(languageStrings.subtitleBars),yLabel.push(languageStrings.VLchartlabelAlbumCount),xLabel.push(languageStrings.VLchartlabelDecade),querytype.push("getDataDecadesWithMostAlbums"),displayChart("Bar",void 0,2)),e=="getDataDecadesWithMostRatedTracks"&&(legendtext.push(languageStrings[e]),subtitlelegendtext.push(languageStrings.subtitleBars),yLabel.push(languageStrings.VLchartlabelRatedTrackCount),xLabel.push(languageStrings.VLchartlabelDecade),querytype.push("getDataDecadesWithMostRatedTracks"),displayChart("Bar",void 0,2)),e=="getDataDecadesHighestPercentageRatedTracks"&&(legendtext.push(languageStrings[e]),subtitlelegendtext.push(languageStrings.subtitleBars),yLabel.push(languageStrings.VLchartlabelPercentageRated),xLabel.push(languageStrings.VLchartlabelDecade),unit.push(languageStrings.VLchartlabelUnitPercentage),querytype.push("getDataDecadesHighestPercentageRatedTracks"),displayChart("Bar",void 0,2)),e=="getDataDecadesWithTopRatedTracksRated"&&(legendtext.push(languageStrings[e]),subtitlelegendtext.push(languageStrings.subtitleBars),yLabel.push(languageStrings.VLchartlabelAverageTrackRating),xLabel.push(languageStrings.VLchartlabelDecade),unit.push(languageStrings.VLchartlabelUnitStar,languageStrings.VLchartlabelUnitStars),valdecimals.push(3),querytype.push("getDataDecadesWithTopRatedTracksRated"),displayChart("Bar",void 0,2)),e=="getDataDecadesWithMostPlayedTracks"&&(legendtext.push(languageStrings[e]),subtitlelegendtext.push(languageStrings.subtitleBars),yLabel.push(languageStrings.VLchartlabelPlayedTrackCount),xLabel.push(languageStrings.VLchartlabelDecade),querytype.push("getDataDecadesWithMostPlayedTracks"),displayChart("Bar",void 0,2)),e=="getDataDecadesWithMostPlayedTracksAPC"&&(legendtext.push(languageStrings[e]),subtitlelegendtext.push(languageStrings.subtitleBars),yLabel.push(languageStrings.VLchartlabelPlayedTrackCount),xLabel.push(languageStrings.VLchartlabelDecade),querytype.push("getDataDecadesWithMostPlayedTracksAPC"),displayChart("Bar",void 0,2)),e=="getDataDecadesHighestPercentagePlayedTracks"&&(legendtext.push(languageStrings[e]),subtitlelegendtext.push(languageStrings.subtitleBars),yLabel.push(languageStrings.VLchartlabelPercentagePlayed),xLabel.push(languageStrings.VLchartlabelDecade),unit.push(languageStrings.VLchartlabelUnitPercentage),querytype.push("getDataDecadesHighestPercentagePlayedTracks"),displayChart("Bar",void 0,2)),e=="getDataDecadesHighestPercentagePlayedTracksAPC"&&(legendtext.push(languageStrings[e]),subtitlelegendtext.push(languageStrings.subtitleBars),yLabel.push(languageStrings.VLchartlabelPercentagePlayed),xLabel.push(languageStrings.VLchartlabelDecade),unit.push(languageStrings.VLchartlabelUnitPercentage),querytype.push("getDataDecadesHighestPercentagePlayedTracksAPC"),displayChart("Bar",void 0,2)),e=="getDataDecadesWithMostPlayedTracksAverage"&&(legendtext.push(languageStrings[e]),subtitlelegendtext.push(languageStrings.subtitleBars),yLabel.push(languageStrings.VLchartlabelAveragePlayCount),xLabel.push(languageStrings.VLchartlabelDecade),valdecimals.push(3),querytype.push("getDataDecadesWithMostPlayedTracksAverage"),displayChart("Bar",void 0,2)),e=="getDataDecadesWithMostPlayedTracksAverageAPC"&&(legendtext.push(languageStrings[e]),subtitlelegendtext.push(languageStrings.subtitleBars),yLabel.push(languageStrings.VLchartlabelAveragePlayCount),xLabel.push(languageStrings.VLchartlabelDecade),valdecimals.push(3),querytype.push("getDataDecadesWithMostPlayedTracksAverageAPC"),displayChart("Bar",void 0,2)),e=="getDataDecadesWithMostSkippedTracksAPC"&&(legendtext.push(languageStrings[e]),subtitlelegendtext.push(languageStrings.subtitleBars),yLabel.push(languageStrings.VLchartlabelSkippedTrackCount),xLabel.push(languageStrings.VLchartlabelDecade),querytype.push("getDataDecadesWithMostSkippedTracksAPC"),displayChart("Bar",void 0,2)),e=="getDataDecadesHighestPercentageSkippedTracksAPC"&&(legendtext.push(languageStrings[e]),subtitlelegendtext.push(languageStrings.subtitleBars),yLabel.push(languageStrings.VLchartlabelPercentageSkipped),xLabel.push(languageStrings.VLchartlabelDecade),unit.push(languageStrings.VLchartlabelUnitPercentage),valdecimals.push(3),querytype.push("getDataDecadesHighestPercentageSkippedTracksAPC"),displayChart("Bar",void 0,2)),e=="getDataDecadesWithMostSkippedTracksAverageAPC"&&(legendtext.push(languageStrings[e]),subtitlelegendtext.push(languageStrings.subtitleBars),yLabel.push(languageStrings.VLchartlabelAverageSkipCount),xLabel.push(languageStrings.VLchartlabelDecade),valdecimals.push(3),querytype.push("getDataDecadesWithMostSkippedTracksAverageAPC"),displayChart("Bar",void 0,2)),e=="getDataListeningTimes"&&(legendtext.push(languageStrings[e]),subtitlelegendtext.push(languageStrings.subtitleDataPoints),yLabel.push(languageStrings.VLchartlabelTrackCount),xLabel.push(languageStrings.VLchartlabelListeningTime),unit.push(languageStrings.VLchartlabelUnitHour),querytype.push("getDataListeningTimes"),displayChart("Line",void 0,2)),e=="getDataListeningTimesAPC"&&(legendtext.push(languageStrings[e]),subtitlelegendtext.push(languageStrings.subtitleDataPoints),yLabel.push(languageStrings.VLchartlabelTrackCount),xLabel.push(languageStrings.VLchartlabelListeningTime),unit.push(languageStrings.VLchartlabelUnitHour),querytype.push("getDataListeningTimesAPC"),displayChart("Line",void 0,2)),e=="getDataTrackTitleMostFrequentWords"&&(legendtext.push(languageStrings[e]),subtitlelegendtext.push(languageStrings.subtitleBars),yLabel.push(languageStrings.VLchartlabelWordCount),querytype.push("getDataTrackTitleMostFrequentWords"),displayChart("Bar")),e=="getDataTrackLyricsMostFrequentWords"&&(legendtext.push(languageStrings[e]),subtitlelegendtext.push(languageStrings.subtitleBars),yLabel.push(languageStrings.VLchartlabelWordCount),querytype.push("getDataTrackLyricsMostFrequentWords"),displayChart("Bar"))}document.getElementById("toggleswitch_colorscheme").addEventListener("change",function(){this.checked?(colorSchemeLight=!1,document.getElementById("colorscheme_value").innerHTML=languageStrings.colorSchemeDark):(colorSchemeLight=!0,document.getElementById("colorscheme_value").innerHTML=languageStrings.colorSchemeLight)}),document.getElementById("togglebtn_layout").addEventListener("click",function(){isHorizontal?SwitchToVertical():SwitchToHorizontal()},!1),document.getElementById("togglebtn_order").addEventListener("click",reverseOrder,!1),document.getElementById("togglebtn_datalabels").addEventListener("click",function(){var e=document.getElementById("chartCanvas").getContext("2d"),t=Chart.getChart(e);hideDatalabels(t)},!1),document.getElementById("saveasimage").addEventListener("click",function(){let n=document.getElementById("chartCanvas");var e=n.cloneNode(!0),t,o,s;e.style.display="none",t=e.getContext("2d"),colorSchemeLight==!0?t.fillStyle="rgba(235, 235, 235, 1)":t.fillStyle="rgba(39, 38, 37, 1)",t.fillRect(0,0,e.width,e.height),t.drawImage(n,0,0),o=e.toDataURL("image/png"),s=document.getElementById("saveasimage"),s.href=o,s.download=legendtext+".png"});function toggleColorSchemeTextOverlay(){var n=document.getElementById("myNavText"),t,e;if(colorSchemeLight===!1){n.style.color="rgba(235, 235, 235, 1)",t=document.getElementsByClassName("overlay");for(e=0;e<t.length;e++)t[e].style.backgroundColor="rgba(39, 38, 37, 1)";t=document.getElementsByClassName("libstatsTableBody");for(e=0;e<t.length;e++)t[e].style.setProperty("--vstats-color","rgba(235, 235, 235, 1)")}if(colorSchemeLight===!0){n.style.color="#666",t=document.getElementsByClassName("overlay");for(e=0;e<t.length;e++)t[e].style.backgroundColor="rgba(240, 240, 240, 1)";t=document.getElementsByClassName("libstatsTableBody");for(e=0;e<t.length;e++)t[e].style.setProperty("--vstats-color","#666")}}